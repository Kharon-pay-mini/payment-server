name: CD - KharonPay Registration Server

on:
  push:
    tags:
      - "v*"

env:
  CARGO_TERM_COLOR: always
  GHCR_IMAGE: ghcr.io/${{ github.repository_owner }}/kharon-server:${{ github.ref_name }}

jobs:
  build-test-push:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: ${{ secrets.PROD_DB_USER }}
          POSTGRES_PASSWORD: ${{ secrets.PROD_DB_PASSWORD }}
          POSTGRES_DB: ${{ secrets.PROD_DB_NAME }}
        ports:
          - "5432:5432"

    steps:
      - uses: actions/checkout@v4

      - name: Setup environment variables
        run: |
          echo "DATABASE_URL=${{ secrets.PROD_DATABASE_URL }}" >> $GITHUB_ENV

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Cache cargo dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Build and test
        run: |
          cargo build --release
          cargo test --release

      - name: Run migrations
        run: |
          cargo install diesel_cli --no-default-features --features postgres
          diesel migration run --database-url ${{ secrets.PROD_DATABASE_URL }}

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ env.GHCR_IMAGE }}
          labels: |
            org.opencontainers.image.source=${{ github.repository_url }}

      - name: Deploy to Railway
        uses: railwayapp/action@v1
        with:
          service: kharon-server-backend
          environment: production
          token: ${{ secrets.RAILWAY_TOKEN }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
